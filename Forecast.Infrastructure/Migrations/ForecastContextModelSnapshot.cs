// <auto-generated />
using Forecast.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Forecast.Infrastructure.Migrations
{
    [DbContext(typeof(ForecastContext))]
    partial class ForecastContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Forecast.Domain.Entities.Forecasts.ForecastDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Elevation")
                        .HasColumnType("float");

                    b.Property<double>("Generationtime_Ms")
                        .HasColumnType("float");

                    b.Property<string>("Hourly")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Timezone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Timezone_Abbreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Utc_Off_initSeconds")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Forecast");
                });

            modelBuilder.Entity("Forecast.Domain.Entities.Forecasts.HourlyUnitsDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ForecastId")
                        .HasColumnType("int");

                    b.Property<string>("Relativehumidity2m")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temperature2m")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Windspeed10m")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ForecastId")
                        .IsUnique();

                    b.ToTable("HourlyUnits");
                });

            modelBuilder.Entity("Forecast.Domain.Entities.Forecasts.HourlyUnitsDto", b =>
                {
                    b.HasOne("Forecast.Domain.Entities.Forecasts.ForecastDto", "Forecast")
                        .WithOne("HourlyUnits")
                        .HasForeignKey("Forecast.Domain.Entities.Forecasts.HourlyUnitsDto", "ForecastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forecast");
                });

            modelBuilder.Entity("Forecast.Domain.Entities.Forecasts.ForecastDto", b =>
                {
                    b.Navigation("HourlyUnits");
                });
#pragma warning restore 612, 618
        }
    }
}

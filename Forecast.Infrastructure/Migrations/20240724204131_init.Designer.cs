// <auto-generated />
using System;
using Forecast.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Forecast.Infrastructure.Migrations
{
    [DbContext(typeof(ForecastContext))]
    [Migration("20240724204131_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Forecast.Domain.Entities.Forecasts.ForecastDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Elevation")
                        .HasColumnType("float");

                    b.Property<double>("GenerationtimeMs")
                        .HasColumnType("float");

                    b.Property<string>("Hourly")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HourlyUnitsId")
                        .HasColumnType("int");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Timezone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimezoneAbbreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UtcOffinitSeconds")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HourlyUnitsId");

                    b.ToTable("ForecastDto");
                });

            modelBuilder.Entity("Forecast.Domain.Entities.Forecasts.HourlyUnitsDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Relativehumidity2m")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temperature2m")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Windspeed10m")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HourlyUnitsDto");
                });

            modelBuilder.Entity("Forecast.Domain.Entities.Forecasts.ForecastDto", b =>
                {
                    b.HasOne("Forecast.Domain.Entities.Forecasts.HourlyUnitsDto", "HourlyUnits")
                        .WithMany()
                        .HasForeignKey("HourlyUnitsId");

                    b.Navigation("HourlyUnits");
                });
#pragma warning restore 612, 618
        }
    }
}
